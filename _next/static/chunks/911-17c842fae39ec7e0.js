(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[911],{803:function(){},2562:function(){},620:function(t,e,a){"use strict";a.d(e,{I:function(){return l}});var o=a(7437),n=a(2840),r=a(2151),s=a.n(r),i=a(2265);function l(t){let{onChange:e,isNumber:a,groupSymbolLeft:r,groupSymbolRight:i,isPercent:l,value:d,...E}=t,m="number"===t.type||a,u="date"===t.type,L="month"===t.type,T="textarea"===t.type,A="mdtextarea"===t.type;function R(t){let{value:a}=t.target;(e||function(){})(l?(0,n.Z)(a).div(100):m?(0,n.Z)(a):u?s()(a,"YYYY-MM-DD").toDate():L?s()(a,"YYYY-MM").toDate():a)}let N=m?function(t,e){let{isPercent:a}=e;return null==t||isNaN(t.toNumber())?"":a?t.times(100).toNumber():t.toNumber()}(d,{isPercent:l}):u?s()(d).format("YYYY-MM-DD"):L?s()(d).format("YYYY-MM"):d||"",D=T?(0,o.jsx)("textarea",{className:"form-control",onChange:R,value:N,...E}):(0,o.jsx)("input",{className:"form-control",onChange:R,value:N,...E});return A&&(D=(0,o.jsx)(c,{onChangeInput:R,inputValue:N,otherProps:E})),r||i?(0,o.jsxs)("div",{className:"input-group",children:[r&&(0,o.jsx)("span",{className:"input-group-text",children:r}),D,i&&(0,o.jsx)("span",{className:"input-group-text",children:i})]}):D}function c(t){let{onChangeInput:e,inputValue:n,otherProps:r}=t,s=(0,i.useRef)(null),l=(0,i.useRef)(null);return(0,i.useEffect)(()=>{var t;let o=a(3029);return l.current=new o({element:s.current,spellChecker:!1,autoDownloadFontAwesome:!1,maxHeight:(null===(t=s.current)||void 0===t?void 0:t.offsetHeight)||200,toolbar:[{name:"bold",action:o.toggleBold,text:"N",title:"Negrito"},{name:"italic",action:o.toggleItalic,text:"I",title:"It\xe1lico"},{name:"heading",action:o.toggleHeadingSmaller,text:"H",title:"T\xedtulo"},"|",{name:"quote",action:o.toggleBlockquote,text:"❝",title:"Cita\xe7\xe3o"},{name:"unordered-list",action:o.toggleUnorderedList,text:"UL",title:"Lista n\xe3o ordenada"},{name:"ordered-list",action:o.toggleOrderedList,text:"OL",title:"Lista ordenada"},"|",{name:"link",action:o.drawLink,text:"\uD83D\uDD17",title:"Inserir link"},{name:"image",action:o.drawImage,text:"\uD83C\uDF06",title:"Inserir imagem"},{name:"table",action:o.drawTable,text:"⏹️",title:"Inserir tabela"},"|",{name:"horizontal-rule",action:o.drawHorizontalRule,text:"↔️",title:"Inserir linha horizontal"},{name:"side-by-side",action:o.toggleSideBySide,text:"\uD83D\uDD00",title:"Lado a lado"},{name:"fullscreen",action:o.toggleFullScreen,text:"⛶",title:"Tela cheia"},"|"]}),l.current.value(n),l.current.codemirror.on("change",()=>{var t;e({target:{value:(null===(t=l.current)||void 0===t?void 0:t.value())||""}})}),()=>{var t;null===(t=l.current)||void 0===t||t.toTextArea(),l.current=null}},[]),(0,o.jsx)("textarea",{ref:s,className:"form-control",onChange:e,value:n,...r})}},8034:function(t,e,a){"use strict";let o;a.d(e,{$P:function(){return E},H$:function(){return T},Jd:function(){return m},Yl:function(){return L},dY:function(){return u}});var n,r,s,i,l,c,d,E,m,u,L,T,A=a(2151),R=a.n(A),N=a(9517),D=a.n(N),O=a(2840),S=a(9235),h=a.n(S),M=a(8620).Buffer;(n=d||(d={}))[n.DATE=0]="DATE",n[n.DATE_TIME=1]="DATE_TIME",n[n.NUMBER=2]="NUMBER",n[n.IGNORE=3]="IGNORE",(r=E||(E={}))[r.FIXO=0]="FIXO",r[r.VARIAVEL=1]="VARIAVEL",(s=m||(m={}))[s.ULTIMO_MES=0]="ULTIMO_MES",s[s.TRES_ULTIMOS_MESES=1]="TRES_ULTIMOS_MESES",s[s.SEIS_ULTIMOS_MESES=2]="SEIS_ULTIMOS_MESES",s[s.ULTIMO_ANO=3]="ULTIMO_ANO",s[s.TODO_HISTORICO=4]="TODO_HISTORICO",(i=u||(u={}))[i.NORMAL=0]="NORMAL",i[i.PRIMARY=1]="PRIMARY",i[i.SECONDARY=2]="SECONDARY",i[i.INFO=3]="INFO",i[i.SUCCESS=4]="SUCCESS",i[i.WARNING=5]="WARNING",i[i.DANGER=6]="DANGER",i[i.LIGHT=7]="LIGHT",i[i.DARK=8]="DARK",(l=L||(L={}))[l.PESSOAL=0]="PESSOAL",l[l.FINANCEIRA=1]="FINANCEIRA",(c=T||(T={})).TRANSACOES="transacoes",c.PATRIMONIO="patrimonio",c.NOTAS="notas",c.METAS="metas";let I={data:1,createdDate:1,updatedDate:1,monthYear:3},U={...I,tipo:2,monthYear:3},p={...I,tipo:2};({...I});let Y="base64";class v{static async create(t){null==o&&(o=await D()({locateFile:t=>"".concat("/gestao-financeira","/").concat(t)}));let e=await v.exportLocalDump();null==t&&null!=e&&(t=M.from(e,Y));let a=new v(new o.Database(t));return await a.runMigrations(),a}static async persistLocalDump(t){await h().setItem(v.DB_NAME,t||"")}static async exportLocalDump(){return await h().getItem(v.DB_NAME)}async exportOriginalDump(){return await Promise.resolve(),this.db.export()}async persistDb(){let t=await this.exportDump();await v.persistLocalDump(t),console.info("persistDb ok")}async saveAll(t,e){let a={},o="";e.forEach((e,n)=>{let{command:r,params:s}=null==e.id?this.createInsertCommand(t,e,"".concat(n)):this.createUpdateCommand(t,e,"".concat(n));o="".concat(o,";").concat(r),a={...a,...s}}),console.info("saveAll",o,a),this.db.exec(o,a),await this.persistDb()}async deletePeriod(t,e,a){this.db.exec("delete from ".concat(t," where strftime('%m', data) = $month and strftime('%Y', data) = $year"),{$month:e,$year:a}),await this.persistDb()}async save(t,e){let a={};return a=(null==e?void 0:e.id)!=null?this.update(t,e):this.insert(t,e),await this.persistDb(),a}async delete(t,e){return this.db.exec("delete from ".concat(t," where id = $id"),{$id:e}),await this.persistDb(),{}}async totais(t){var e,a,o,n;await Promise.resolve();let r=this.db.exec("\n    select SUM(t.valor) as valorEmCaixa FROM transacoes t;\n    \n    select SUM(t.valor) as receitas FROM transacoes t\n    WHERE t.valor >= 0\n    and strftime('%m', t.data) = $month and strftime('%Y', t.data) = $year;\n\n    select SUM(t.valor) as despesas FROM transacoes t\n    WHERE t.valor < 0\n    and strftime('%m', t.data) = $month and strftime('%Y', t.data) = $year;\n\n    WITH Totais AS (\n      SELECT strftime('%Y-%m', t.data) AS mes,\n          SUM(CASE WHEN t.valor >= 0 THEN t.valor ELSE 0 END) AS receitasMes,\n          SUM(CASE WHEN t.valor < 0 THEN t.valor ELSE 0 END) AS despesasMes,\n          SUM(t.valor) AS totalMes,\n          SUM(SUM(t.valor)) OVER (ORDER BY strftime('%Y-%m', data)) AS totalAcumulado\n      FROM transacoes t\n      GROUP BY mes\n    )\n    SELECT mes,\n      receitasMes,\n      despesasMes,\n        totalAcumulado,\n        totalMes,\n        totalAcumulado - LAG(totalAcumulado, 1, 0) OVER (ORDER BY mes) AS variacaoMes,\n        (totalAcumulado - LAG(totalAcumulado, 1, 0) OVER (ORDER BY mes)) / LAG(totalAcumulado, 1, 1) OVER (ORDER BY mes) * 100 AS variacaoPercentualMes,\n        totalAcumulado - LAG(totalAcumulado, 3, 0) OVER (ORDER BY mes) AS variacaoTrimestral,\n        (totalAcumulado - LAG(totalAcumulado, 3, 0) OVER (ORDER BY mes)) / LAG(totalAcumulado, 3, 1) OVER (ORDER BY mes) * 100 AS variacaoPercentualTrimestral,\n        totalAcumulado - LAG(totalAcumulado, 6, 0) OVER (ORDER BY mes) AS variacaoSemestral,\n        (totalAcumulado - LAG(totalAcumulado, 6, 0) OVER (ORDER BY mes)) / LAG(totalAcumulado, 6, 1) OVER (ORDER BY mes) * 100 AS variacaoPercentualSemestral,\n        totalAcumulado - LAG(totalAcumulado, 12, 0) OVER (ORDER BY mes) AS variacaoAnual,\n        (totalAcumulado - LAG(totalAcumulado, 12, 0) OVER (ORDER BY mes)) / LAG(totalAcumulado, 12, 1) OVER (ORDER BY mes) * 100 AS variacaoPercentualAnual,\n        totalAcumulado - LAG(totalAcumulado, 36, 0) OVER (ORDER BY mes) AS variacaoTresAnos,\n        (totalAcumulado - LAG(totalAcumulado, 36, 0) OVER (ORDER BY mes)) / LAG(totalAcumulado, 36, 1) OVER (ORDER BY mes) * 100 AS variacaoPercentualTresAnos\n    FROM Totais\n    ORDER BY mes\n    LIMIT -1 OFFSET 1;\n\n    SELECT * FROM metas m\n    WHERE strftime('%Y', m.data) = $year;\n    ",{$month:R()(t).format("MM"),$year:R()(t).format("YYYY")}),s=this.parseSqlResultToObj(r);return{valorEmCaixa:null===(e=s[0][0])||void 0===e?void 0:e.valorEmCaixa,receitas:null===(a=s[1][0])||void 0===a?void 0:a.receitas,despesas:null===(o=s[2][0])||void 0===o?void 0:o.despesas,transacoesAcumuladaPorMes:s[3],metas:null===(n=s[4])||void 0===n?void 0:n.map(t=>(t.tipo=t.tipo.toNumber(),t))}}async totaisCaixa(){await Promise.resolve();let t=this.db.exec("select SUM(t.valor) as valorEmCaixa FROM transacoes t"),{valorEmCaixa:e}=this.parseSqlResultToObj(t)[0][0]||{},a=this.db.exec("SELECT strftime('%Y-%m', t.data) AS mes,\n    SUM(t.valor) AS totalMes,\n    SUM(SUM(t.valor)) OVER (ORDER BY strftime('%Y-%m', t.data)) AS totalAcumulado\n    FROM transacoes t\n    GROUP BY strftime('%Y-%m', t.data)\n      ");return{valorEmCaixa:e,transacoesAcumuladaPorMes:this.parseSqlResultToObj(a)[0]||[]}}getQueryByPeriodo(t){let e="strftime('%Y-%m', data) = strftime('%Y-%m', DATETIME('now'))";switch(t){case 1:e="data > DATETIME('now', '-3 month')";break;case 2:e="data > DATETIME('now', '-6 month')";break;case 3:e="data > DATETIME('now', '-12 month')";break;case 4:e="1=1"}return e}async list(t){await Promise.resolve();let e=this.db.exec("SELECT strftime('%Y-%m', data) AS monthYear, * FROM ".concat(t," order by data desc"));if(!Array.isArray(e))throw Error("".concat(t," n\xe3o encontrado (a)"));return this.parseSqlResultToObj(e,p)[0]||[]}async listCaixaOrPatrimonio(t,e){await Promise.resolve();let a=this.getQueryByPeriodo(e),o=this.db.exec("SELECT strftime('%Y-%m', data) AS monthYear, * FROM ".concat(t," where ").concat(a," order by monthYear desc, ordem ASC"));if(!Array.isArray(o))throw Error("".concat(t," n\xe3o encontrado (a)"));return this.parseSqlResultToObj(o,U)[0]||[]}async listByMonth(t,e,a){await Promise.resolve();let o=this.db.exec("select strftime('%Y-%m', data) AS monthYear, * FROM ".concat(t," where strftime('%m', data) = $month and strftime('%Y', data) = $year order by monthYear desc, ordem asc"),{$month:e,$year:a});if(!Array.isArray(o))throw Error("".concat(t," n\xe3o encontrado (a)"));return this.parseSqlResultToObj(o,U)[0]||[]}async get(t,e){await Promise.resolve();let a=this.db.exec("select * from ".concat(t," where id = $id"),{$id:e});if(0===a.length)throw Error("".concat(t," n\xe3o encontrado (a)"));return this.parseSqlResultToObj(a,U)[0][0]}async insert(t,e){let{command:a,params:o,nextData:n}=this.createInsertCommand(t,e),r=this.db.exec("".concat(a,";SELECT LAST_INSERT_ROWID();"),o);return n.id=r[0].values[0][0],n}createInsertCommand(t,e){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",o={...e,createdDate:new Date},{keys:n,params:r}=this.parseToCommand(o,a);return{command:"INSERT INTO ".concat(t," (").concat(n.join(", "),") VALUES (").concat(n.map(t=>"$".concat(t).concat(a)).join(", "),")"),params:r,nextData:o}}async update(t,e){let{command:a,params:o}=this.createUpdateCommand(t,e);return this.db.exec(a,o),this.get(t,e.id)}createUpdateCommand(t,e){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",o={...e,updatedDate:new Date},{keys:n,params:r}=this.parseToCommand(o,a);return{command:"UPDATE ".concat(t," SET ").concat(n.map(t=>"".concat(t,"=$").concat(t).concat(a)).join(", ")," WHERE id=$id").concat(a),params:r,nextData:o}}parseSqlResultToObj(t,e){return t.map(t=>t.values.map(a=>t.columns.reduce((t,o,n)=>{let r=a[n],s=!0;return"id"!==o&&null!=r&&(null!=e&&(0===e[o]?(t[o]=R()(r,"YYYY-MM-DD").toDate(),s=!1):1===e[o]?(t[o]=R()(r,"YYYY-MM-DD hh:mm:ss").toDate(),s=!1):2===e[o]?(t[o]=r,s=!1):3===e[o]&&(s=!1)),s&&"number"==typeof r&&(t[o]=(0,O.Z)(r),s=!1)),s&&(t[o]=r),t},{})))}parseToCommand(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=Object.keys(t).filter(e=>void 0!==t[e]),o=a.reduce((a,o)=>{var n;let r=null!==(n=t[o])&&void 0!==n?n:null;return r instanceof Date&&(r=R()(r).format()),(null==r?void 0:r._isBigNumber)&&(r=r.toNumber()),a["$".concat(o).concat(e)]=r,a},{});return{keys:a,params:o}}beforeClose(){window.addEventListener("beforeunload",t=>{let e="Ter certeza que deseja sair?",a=t||window.event;return a&&(a.returnValue=e),this.persistDb(),e})}async exportDump(){await Promise.resolve();let t=this.db.export();return M.from(t).toString(Y)}async runMigrations(){await Promise.resolve();let t="runned";this.db.exec('CREATE TABLE IF NOT EXISTS "migrations" ("id" INTEGER NOT NULL,"name" TEXT NULL DEFAULT NULL,"executedDate" DATETIME NULL,PRIMARY KEY ("id"));');let e=this.db.exec('select * from "migrations"'),a=(this.parseSqlResultToObj(e)[0]||[]).reduce((t,e)=>(t[e.name]=e,t),{});null==a.transacoes&&(this.db.exec('CREATE TABLE IF NOT EXISTS "transacoes" ("id" INTEGER NOT NULL,"valor" REAL NULL DEFAULT NULL,"data" DATETIME NOT NULL,"tipo" INTEGER NULL DEFAULT NULL,"local" TEXT NULL DEFAULT NULL,"comentario" TEXT NULL DEFAULT NULL,"createdDate" DATETIME NOT NULL,"updatedDate" DATETIME NULL DEFAULT NULL,PRIMARY KEY ("id"));'),a.transacoes=t),null==a.transacoes_campo_ordem&&(this.db.exec('ALTER TABLE "transacoes" ADD COLUMN "ordem" INTEGER NULL;'),a.transacoes_campo_ordem=t),null==a.saldos&&(this.db.exec('CREATE TABLE IF NOT EXISTS "saldos" ("id" INTEGER NOT NULL,"valor" REAL NULL DEFAULT NULL,"data" DATETIME NOT NULL,"local" TEXT NULL DEFAULT NULL,"comentario" TEXT NULL DEFAULT NULL, "ordem" INTEGER NULL DEFAULT NULL,"createdDate" DATETIME NOT NULL,"updatedDate" DATETIME NULL DEFAULT NULL,PRIMARY KEY ("id"));'),a.saldos=t),null==a.rename_saldos_to_patrimonio&&(this.db.exec("ALTER TABLE 'saldos' RENAME TO 'patrimonio'"),a.rename_saldos_to_patrimonio=t),null==a.notas&&(this.db.exec('CREATE TABLE IF NOT EXISTS "notas" ("id" INTEGER NOT NULL,"data" DATETIME NOT NULL,"descricao" TEXT NULL DEFAULT NULL,"createdDate" DATETIME NOT NULL,"updatedDate" DATETIME NULL DEFAULT NULL,PRIMARY KEY ("id"));'),a.notas=t),null==a.notas_campo_comentario_e_tipo&&(this.db.exec('ALTER TABLE "notas" ADD COLUMN "tipo" INTEGER NULL; ALTER TABLE "notas" ADD COLUMN "comentario" TEXT NULL;'),a.notas_campo_comentario_e_tipo=t),null==a.metas&&(this.db.exec('CREATE TABLE IF NOT EXISTS "metas" ("id" INTEGER NOT NULL,"data" DATETIME NOT NULL,"descricao" TEXT NULL DEFAULT NULL, "comentario" TEXT NULL, "tipo" INTEGER NULL, "done" INTEGER NULL,"createdDate" DATETIME NOT NULL,"updatedDate" DATETIME NULL DEFAULT NULL,PRIMARY KEY ("id"));'),a.metas=t);let o=Object.keys(a).filter(e=>a[e]===t).reduce((t,e)=>(t.push({name:e,executedDate:new Date}),t),[]),n={},r="";o.length>0&&(o.forEach((t,e)=>{let{keys:a,params:o}=this.parseToCommand(t,"".concat(e)),s='INSERT INTO "migrations" ('.concat(a.join(", "),") VALUES (").concat(a.map(t=>"$".concat(t).concat(e)).join(", "),")");r="".concat(r,";").concat(s),n={...n,...o}}),this.db.exec(r,n)),await this.persistDb()}constructor(t){this.db=t}}v.DB_NAME="gestao-financeira.settings.db"}}]);